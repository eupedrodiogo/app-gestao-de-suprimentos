const Database = require('../database/database');
require('dotenv').config();

async function seedDatabase() {
    const db = new Database();
    
    try {
        console.log('üå± Iniciando popula√ß√£o do banco com dados de exemplo...');
        
        // Conectar ao banco
        await db.connect();
        console.log('‚úÖ Conectado ao SQL Server');
        
        // Verificar se j√° existem dados
        const existingProducts = await db.execute('SELECT COUNT(*) as count FROM products');
        if (existingProducts[0].count > 0) {
            console.log('‚ö†Ô∏è  Banco j√° cont√©m dados. Use --force para sobrescrever.');
            if (!process.argv.includes('--force')) {
                return;
            }
            
            console.log('üóëÔ∏è  Limpando dados existentes...');
            await db.execute('DELETE FROM order_items');
            await db.execute('DELETE FROM quote_items');
            await db.execute('DELETE FROM orders');
            await db.execute('DELETE FROM quotes');
            await db.execute('DELETE FROM inventory');
            await db.execute('DELETE FROM products');
            await db.execute('DELETE FROM suppliers');
        }
        
        // Popular com dados de exemplo
        await db.insertSampleData();
        console.log('‚úÖ Dados de exemplo inseridos com sucesso');
        
        // Mostrar estat√≠sticas
        const stats = await db.execute(`
            SELECT 
                (SELECT COUNT(*) FROM suppliers) as suppliers,
                (SELECT COUNT(*) FROM products) as products,
                (SELECT COUNT(*) FROM quotes) as quotes,
                (SELECT COUNT(*) FROM orders) as orders
        `);
        
        console.log('üìä Estat√≠sticas do banco:');
        console.log(`   - Fornecedores: ${stats[0].suppliers}`);
        console.log(`   - Produtos: ${stats[0].products}`);
        console.log(`   - Cota√ß√µes: ${stats[0].quotes}`);
        console.log(`   - Pedidos: ${stats[0].orders}`);
        
        console.log('üéâ Popula√ß√£o do banco conclu√≠da com sucesso!');
        
    } catch (error) {
        console.error('‚ùå Erro durante a popula√ß√£o do banco:', error);
        process.exit(1);
    } finally {
        await db.disconnect();
    }
}

// Executar seed se chamado diretamente
if (require.main === module) {
    seedDatabase();
}

module.exports = seedDatabase;